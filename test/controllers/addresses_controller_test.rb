require 'test_helper'

class AddressesControllerTest < ActionDispatch::IntegrationTest
  setup do
    @address = addresses(:one)
  end

  test "should get index" do
    get addresses_url, as: :json
    assert_response :success
  end

  test "should create address" do
    assert_difference('Address.count') do
      post addresses_url, params: { address: { alleyCrossStreetsFlag: @address.alleyCrossStreetsFlag, assemblyDistrict: @address.assemblyDistrict, bbl: @address.bbl, bblBoroughCode: @address.bblBoroughCode, bblTaxBlock: @address.bblTaxBlock, bblTaxLot: @address.bblTaxLot, boardOfElectionsPreferredLgc: @address.boardOfElectionsPreferredLgc, boePreferredStreetName: @address.boePreferredStreetName, boePreferredstreetCode: @address.boePreferredstreetCode, buildingIdentificationNumber: @address.buildingIdentificationNumber, censusBlock2000: @address.censusBlock2000, censusBlock2010: @address.censusBlock2010, censusTract1990: @address.censusTract1990, censusTract2000: @address.censusTract2000, censusTract2010: @address.censusTract2010, cityCouncilDistrict: @address.cityCouncilDistrict, civilCourtDistrict: @address.civilCourtDistrict, coincidentSegmentCount: @address.coincidentSegmentCount, communityDistrict: @address.communityDistrict, communityDistrictBoroughCode: @address.communityDistrictBoroughCode, communityDistrictNumber: @address.communityDistrictNumber, communitySchoolDistrict: @address.communitySchoolDistrict, condominiumBillingBbl: @address.condominiumBillingBbl, condominiumFlag: @address.condominiumFlag, congressionalDistrict: @address.congressionalDistrict, cooperativeIdNumber: @address.cooperativeIdNumber, crossStreetNamesFlagIn: @address.crossStreetNamesFlagIn, dcpPreferredLgc: @address.dcpPreferredLgc, dofCondominiumIdentificationNumber: @address.dofCondominiumIdentificationNumber, dotStreetLightContractorArea: @address.dotStreetLightContractorArea, dynamicBlock: @address.dynamicBlock, electionDistrict: @address.electionDistrict, fireBattalion: @address.fireBattalion, fireCompanyNumber: @address.fireCompanyNumber, fireCompanyType: @address.fireCompanyType, fireDivision: @address.fireDivision, firstBoroughName: @address.firstBoroughName, firstStreetCode: @address.firstStreetCode, firstStreetNameNormalized: @address.firstStreetNameNormalized, fromLionNodeId: @address.fromLionNodeId, fromPreferredLgcsFirstSetOf5: @address.fromPreferredLgcsFirstSetOf5, genericId: @address.genericId, geosupportFunctionCode: @address.geosupportFunctionCode, geosupportReturnCode: @address.geosupportReturnCode, geosupportReturnCode2: @address.geosupportReturnCode2, gi5DigitStreetCode1: @address.gi5DigitStreetCode1, giBoroughCode1: @address.giBoroughCode1, giBuildingIdentificationNumber1: @address.giBuildingIdentificationNumber1, giDcpPreferredLgc1: @address.giDcpPreferredLgc1, giHighHouseNumber1: @address.giHighHouseNumber1, giLowHouseNumber1: @address.giLowHouseNumber1, giSideOfStreetIndicator1: @address.giSideOfStreetIndicator1, giStreetCode1: @address.giStreetCode1, giStreetName1: @address.giStreetName1, healthArea: @address.healthArea, healthCenterDistrict: @address.healthCenterDistrict, highBblOfThisBuildingsCondominiumUnits: @address.highBblOfThisBuildingsCondominiumUnits, highCrossStreetB5SC1: @address.highCrossStreetB5SC1, highCrossStreetCode1: @address.highCrossStreetCode1, highCrossStreetName1: @address.highCrossStreetName1, highHouseNumberOfBlockfaceSortFormat: @address.highHouseNumberOfBlockfaceSortFormat, houseNumber: @address.houseNumber, houseNumberIn: @address.houseNumberIn, houseNumberSortFormat: @address.houseNumberSortFormat, hurricaneEvacuationZone: @address.hurricaneEvacuationZone, individualSegmentLength: @address.individualSegmentLength, instructionalRegion: @address.instructionalRegion, interimAssistanceEligibilityIndicator: @address.interimAssistanceEligibilityIndicator, internalLabelXCoordinate: @address.internalLabelXCoordinate, internalLabelYCoordinate: @address.internalLabelYCoordinate, latitude: @address.latitude, latitudeInternalLabel: @address.latitudeInternalLabel, legacySegmentId: @address.legacySegmentId, lionBoroughCode: @address.lionBoroughCode, lionBoroughCodeForVanityAddress: @address.lionBoroughCodeForVanityAddress, lionFaceCode: @address.lionFaceCode, lionFaceCodeForVanityAddress: @address.lionFaceCodeForVanityAddress, lionKey: @address.lionKey, lionKeyForVanityAddress: @address.lionKeyForVanityAddress, lionSequenceNumber: @address.lionSequenceNumber, lionSequenceNumberForVanityAddress: @address.lionSequenceNumberForVanityAddress, listOf4Lgcs: @address.listOf4Lgcs, longitude: @address.longitude, longitudeInternalLabel: @address.longitudeInternalLabel, lowBblOfThisBuildingsCondominiumUnits: @address.lowBblOfThisBuildingsCondominiumUnits, lowCrossStreetB5SC1: @address.lowCrossStreetB5SC1, lowCrossStreetCode1: @address.lowCrossStreetCode1, lowCrossStreetName1: @address.lowCrossStreetName1, lowHouseNumberOfBlockfaceSortFormat: @address.lowHouseNumberOfBlockfaceSortFormat, lowHouseNumberOfDefiningAddressRange: @address.lowHouseNumberOfDefiningAddressRange, noCrossStreetCalculationFlag: @address.noCrossStreetCalculationFlag, nta: @address.nta, ntaName: @address.ntaName, numberOfCrossStreetB5SCsHighAddressEnd: @address.numberOfCrossStreetB5SCsHighAddressEnd, numberOfCrossStreetB5SCsLowAddressEnd: @address.numberOfCrossStreetB5SCsLowAddressEnd, numberOfCrossStreetsHighAddressEnd: @address.numberOfCrossStreetsHighAddressEnd, numberOfCrossStreetsLowAddressEnd: @address.numberOfCrossStreetsLowAddressEnd, numberOfEntriesInListOfGeographicIdentifiers: @address.numberOfEntriesInListOfGeographicIdentifiers, numberOfExistingStructuresOnLot: @address.numberOfExistingStructuresOnLot, numberOfStreetFrontagesOfLot: @address.numberOfStreetFrontagesOfLot, physicalId: @address.physicalId, policePatrolBoroughCommand: @address.policePatrolBoroughCommand, policePrecinct: @address.policePrecinct, returnCode1a: @address.returnCode1a, returnCode1e: @address.returnCode1e, roadwayType: @address.roadwayType, rpadBuildingClassificationCode: @address.rpadBuildingClassificationCode, rpadSelfCheckCodeForBbl: @address.rpadSelfCheckCodeForBbl, sanbornBoroughCode: @address.sanbornBoroughCode, sanbornPageNumber: @address.sanbornPageNumber, sanbornVolumeNumber: @address.sanbornVolumeNumber, sanbornVolumeNumberSuffix: @address.sanbornVolumeNumberSuffix, sanitationCollectionSchedulingSectionAndSubsection: @address.sanitationCollectionSchedulingSectionAndSubsection, sanitationDistrict: @address.sanitationDistrict, sanitationRecyclingCollectionSchedule: @address.sanitationRecyclingCollectionSchedule, sanitationRegularCollectionSchedule: @address.sanitationRegularCollectionSchedule, sanitationSnowPriorityCode: @address.sanitationSnowPriorityCode, segmentAzimuth: @address.segmentAzimuth, segmentIdentifier: @address.segmentIdentifier, segmentLengthInFeet: @address.segmentLengthInFeet, segmentOrientation: @address.segmentOrientation, segmentTypeCode: @address.segmentTypeCode, selfCheckCodeOfBillingBbl: @address.selfCheckCodeOfBillingBbl, sideOfStreetIndicator: @address.sideOfStreetIndicator, sideOfStreetOfVanityAddress: @address.sideOfStreetOfVanityAddress, splitLowHouseNumber: @address.splitLowHouseNumber, stateSenatorialDistrict: @address.stateSenatorialDistrict, streetName1In: @address.streetName1In, streetStatus: @address.streetStatus, streetWidth: @address.streetWidth, taxMapNumberSectionAndVolume: @address.taxMapNumberSectionAndVolume, toLionNodeId: @address.toLionNodeId, toPreferredLgcsFirstSetOf5: @address.toPreferredLgcsFirstSetOf5, trafficDirection: @address.trafficDirection, underlyingStreetCode: @address.underlyingStreetCode, uspsPreferredCityName: @address.uspsPreferredCityName, workAreaFormatIndicatorIn: @address.workAreaFormatIndicatorIn, xCoordinate: @address.xCoordinate, xCoordinateHighAddressEnd: @address.xCoordinateHighAddressEnd, xCoordinateLowAddressEnd: @address.xCoordinateLowAddressEnd, xCoordinateOfCenterofCurvature: @address.xCoordinateOfCenterofCurvature, yCoordinate: @address.yCoordinate, yCoordinateHighAddressEnd: @address.yCoordinateHighAddressEnd, yCoordinateLowAddressEnd: @address.yCoordinateLowAddressEnd, yCoordinateOfCenterofCurvature: @address.yCoordinateOfCenterofCurvature, zipCode: @address.zipCode, zipCodeIn: @address.zipCodeIn } }, as: :json
    end

    assert_response 201
  end

  test "should show address" do
    get address_url(@address), as: :json
    assert_response :success
  end

  test "should update address" do
    patch address_url(@address), params: { address: { alleyCrossStreetsFlag: @address.alleyCrossStreetsFlag, assemblyDistrict: @address.assemblyDistrict, bbl: @address.bbl, bblBoroughCode: @address.bblBoroughCode, bblTaxBlock: @address.bblTaxBlock, bblTaxLot: @address.bblTaxLot, boardOfElectionsPreferredLgc: @address.boardOfElectionsPreferredLgc, boePreferredStreetName: @address.boePreferredStreetName, boePreferredstreetCode: @address.boePreferredstreetCode, buildingIdentificationNumber: @address.buildingIdentificationNumber, censusBlock2000: @address.censusBlock2000, censusBlock2010: @address.censusBlock2010, censusTract1990: @address.censusTract1990, censusTract2000: @address.censusTract2000, censusTract2010: @address.censusTract2010, cityCouncilDistrict: @address.cityCouncilDistrict, civilCourtDistrict: @address.civilCourtDistrict, coincidentSegmentCount: @address.coincidentSegmentCount, communityDistrict: @address.communityDistrict, communityDistrictBoroughCode: @address.communityDistrictBoroughCode, communityDistrictNumber: @address.communityDistrictNumber, communitySchoolDistrict: @address.communitySchoolDistrict, condominiumBillingBbl: @address.condominiumBillingBbl, condominiumFlag: @address.condominiumFlag, congressionalDistrict: @address.congressionalDistrict, cooperativeIdNumber: @address.cooperativeIdNumber, crossStreetNamesFlagIn: @address.crossStreetNamesFlagIn, dcpPreferredLgc: @address.dcpPreferredLgc, dofCondominiumIdentificationNumber: @address.dofCondominiumIdentificationNumber, dotStreetLightContractorArea: @address.dotStreetLightContractorArea, dynamicBlock: @address.dynamicBlock, electionDistrict: @address.electionDistrict, fireBattalion: @address.fireBattalion, fireCompanyNumber: @address.fireCompanyNumber, fireCompanyType: @address.fireCompanyType, fireDivision: @address.fireDivision, firstBoroughName: @address.firstBoroughName, firstStreetCode: @address.firstStreetCode, firstStreetNameNormalized: @address.firstStreetNameNormalized, fromLionNodeId: @address.fromLionNodeId, fromPreferredLgcsFirstSetOf5: @address.fromPreferredLgcsFirstSetOf5, genericId: @address.genericId, geosupportFunctionCode: @address.geosupportFunctionCode, geosupportReturnCode: @address.geosupportReturnCode, geosupportReturnCode2: @address.geosupportReturnCode2, gi5DigitStreetCode1: @address.gi5DigitStreetCode1, giBoroughCode1: @address.giBoroughCode1, giBuildingIdentificationNumber1: @address.giBuildingIdentificationNumber1, giDcpPreferredLgc1: @address.giDcpPreferredLgc1, giHighHouseNumber1: @address.giHighHouseNumber1, giLowHouseNumber1: @address.giLowHouseNumber1, giSideOfStreetIndicator1: @address.giSideOfStreetIndicator1, giStreetCode1: @address.giStreetCode1, giStreetName1: @address.giStreetName1, healthArea: @address.healthArea, healthCenterDistrict: @address.healthCenterDistrict, highBblOfThisBuildingsCondominiumUnits: @address.highBblOfThisBuildingsCondominiumUnits, highCrossStreetB5SC1: @address.highCrossStreetB5SC1, highCrossStreetCode1: @address.highCrossStreetCode1, highCrossStreetName1: @address.highCrossStreetName1, highHouseNumberOfBlockfaceSortFormat: @address.highHouseNumberOfBlockfaceSortFormat, houseNumber: @address.houseNumber, houseNumberIn: @address.houseNumberIn, houseNumberSortFormat: @address.houseNumberSortFormat, hurricaneEvacuationZone: @address.hurricaneEvacuationZone, individualSegmentLength: @address.individualSegmentLength, instructionalRegion: @address.instructionalRegion, interimAssistanceEligibilityIndicator: @address.interimAssistanceEligibilityIndicator, internalLabelXCoordinate: @address.internalLabelXCoordinate, internalLabelYCoordinate: @address.internalLabelYCoordinate, latitude: @address.latitude, latitudeInternalLabel: @address.latitudeInternalLabel, legacySegmentId: @address.legacySegmentId, lionBoroughCode: @address.lionBoroughCode, lionBoroughCodeForVanityAddress: @address.lionBoroughCodeForVanityAddress, lionFaceCode: @address.lionFaceCode, lionFaceCodeForVanityAddress: @address.lionFaceCodeForVanityAddress, lionKey: @address.lionKey, lionKeyForVanityAddress: @address.lionKeyForVanityAddress, lionSequenceNumber: @address.lionSequenceNumber, lionSequenceNumberForVanityAddress: @address.lionSequenceNumberForVanityAddress, listOf4Lgcs: @address.listOf4Lgcs, longitude: @address.longitude, longitudeInternalLabel: @address.longitudeInternalLabel, lowBblOfThisBuildingsCondominiumUnits: @address.lowBblOfThisBuildingsCondominiumUnits, lowCrossStreetB5SC1: @address.lowCrossStreetB5SC1, lowCrossStreetCode1: @address.lowCrossStreetCode1, lowCrossStreetName1: @address.lowCrossStreetName1, lowHouseNumberOfBlockfaceSortFormat: @address.lowHouseNumberOfBlockfaceSortFormat, lowHouseNumberOfDefiningAddressRange: @address.lowHouseNumberOfDefiningAddressRange, noCrossStreetCalculationFlag: @address.noCrossStreetCalculationFlag, nta: @address.nta, ntaName: @address.ntaName, numberOfCrossStreetB5SCsHighAddressEnd: @address.numberOfCrossStreetB5SCsHighAddressEnd, numberOfCrossStreetB5SCsLowAddressEnd: @address.numberOfCrossStreetB5SCsLowAddressEnd, numberOfCrossStreetsHighAddressEnd: @address.numberOfCrossStreetsHighAddressEnd, numberOfCrossStreetsLowAddressEnd: @address.numberOfCrossStreetsLowAddressEnd, numberOfEntriesInListOfGeographicIdentifiers: @address.numberOfEntriesInListOfGeographicIdentifiers, numberOfExistingStructuresOnLot: @address.numberOfExistingStructuresOnLot, numberOfStreetFrontagesOfLot: @address.numberOfStreetFrontagesOfLot, physicalId: @address.physicalId, policePatrolBoroughCommand: @address.policePatrolBoroughCommand, policePrecinct: @address.policePrecinct, returnCode1a: @address.returnCode1a, returnCode1e: @address.returnCode1e, roadwayType: @address.roadwayType, rpadBuildingClassificationCode: @address.rpadBuildingClassificationCode, rpadSelfCheckCodeForBbl: @address.rpadSelfCheckCodeForBbl, sanbornBoroughCode: @address.sanbornBoroughCode, sanbornPageNumber: @address.sanbornPageNumber, sanbornVolumeNumber: @address.sanbornVolumeNumber, sanbornVolumeNumberSuffix: @address.sanbornVolumeNumberSuffix, sanitationCollectionSchedulingSectionAndSubsection: @address.sanitationCollectionSchedulingSectionAndSubsection, sanitationDistrict: @address.sanitationDistrict, sanitationRecyclingCollectionSchedule: @address.sanitationRecyclingCollectionSchedule, sanitationRegularCollectionSchedule: @address.sanitationRegularCollectionSchedule, sanitationSnowPriorityCode: @address.sanitationSnowPriorityCode, segmentAzimuth: @address.segmentAzimuth, segmentIdentifier: @address.segmentIdentifier, segmentLengthInFeet: @address.segmentLengthInFeet, segmentOrientation: @address.segmentOrientation, segmentTypeCode: @address.segmentTypeCode, selfCheckCodeOfBillingBbl: @address.selfCheckCodeOfBillingBbl, sideOfStreetIndicator: @address.sideOfStreetIndicator, sideOfStreetOfVanityAddress: @address.sideOfStreetOfVanityAddress, splitLowHouseNumber: @address.splitLowHouseNumber, stateSenatorialDistrict: @address.stateSenatorialDistrict, streetName1In: @address.streetName1In, streetStatus: @address.streetStatus, streetWidth: @address.streetWidth, taxMapNumberSectionAndVolume: @address.taxMapNumberSectionAndVolume, toLionNodeId: @address.toLionNodeId, toPreferredLgcsFirstSetOf5: @address.toPreferredLgcsFirstSetOf5, trafficDirection: @address.trafficDirection, underlyingStreetCode: @address.underlyingStreetCode, uspsPreferredCityName: @address.uspsPreferredCityName, workAreaFormatIndicatorIn: @address.workAreaFormatIndicatorIn, xCoordinate: @address.xCoordinate, xCoordinateHighAddressEnd: @address.xCoordinateHighAddressEnd, xCoordinateLowAddressEnd: @address.xCoordinateLowAddressEnd, xCoordinateOfCenterofCurvature: @address.xCoordinateOfCenterofCurvature, yCoordinate: @address.yCoordinate, yCoordinateHighAddressEnd: @address.yCoordinateHighAddressEnd, yCoordinateLowAddressEnd: @address.yCoordinateLowAddressEnd, yCoordinateOfCenterofCurvature: @address.yCoordinateOfCenterofCurvature, zipCode: @address.zipCode, zipCodeIn: @address.zipCodeIn } }, as: :json
    assert_response 200
  end

  test "should destroy address" do
    assert_difference('Address.count', -1) do
      delete address_url(@address), as: :json
    end

    assert_response 204
  end
end
